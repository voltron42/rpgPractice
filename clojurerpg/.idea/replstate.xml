<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1494623477221">{:repl-history {:ide [], :local [&quot;(clojurerpg.flow/-main \&quot;resources/testrun.edn\&quot;)&quot; &quot;(meta +)&quot; &quot;+&quot; &quot;(name +)&quot; &quot;(apply partial [apply (resolve '/)])&quot; &quot;(let [div (apply partial [apply (resolve '/)])] (div 16 8))&quot; &quot;(let [div (apply partial [apply (resolve '/)])] (div [16 8]))&quot; &quot;(map type '(true false))&quot; &quot;(let [myif (apply partial [apply (resolve 'if)])] (map #(%) [#(myif [true \&quot;yes\&quot; \&quot;no\&quot;]) #(myif [false \&quot;yes\&quot; \&quot;no\&quot;])]))&quot; &quot;(apply partial [apply if])&quot; &quot;(resolve 'if)&quot; &quot;(partial apply or)&quot; &quot;(resolve 'or)&quot; &quot;(type (type true))&quot; &quot;(= Boolean (type true))&quot; &quot;((partial some true?) [true false true])&quot; &quot;((partial some true?) (map #(%) (map #(constantly %) [false false true])))&quot; &quot;((partial some true?) (map #(%) (map #(constantly %) [false false false])))&quot; &quot;((partial some true?) (map #(%) (map #(do (println \&quot;counting\&quot;) (constantly %)) [false false false])))&quot; &quot;((partial some true?) (map #(%) (map #(do (println \&quot;counting\&quot;) (constantly %)) [true false false])))&quot; &quot;((partial every? true?) (map #(%) (map #(do (println \&quot;counting\&quot;) (constantly %)) [false false true])))&quot;], :remote []}}</component>
</project>